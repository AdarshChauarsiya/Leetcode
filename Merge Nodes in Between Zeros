/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* mergeNodes(ListNode* head) {
        ListNode*dummy=new ListNode(-1);
        ListNode*res=dummy;
        ListNode*temp=head;
        int c=0;
        int sum=0;
        while(temp!=NULL){
            if(temp->val==0){
                c++;
                if(c==2){
                    ListNode*newnode=new ListNode(sum);
                    cout<<newnode->val;
                    res->next=newnode;
                    res=res->next;
                    sum=0;
                    c=1;
                }
            }
            if(c<=1)sum+=temp->val;
            temp=temp->next;
        }
        return dummy->next;
    }
};
