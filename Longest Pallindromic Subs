class Solution {
public:
    int solve(string &s,string &t,int i,int j,vector<vector<int>>&dp){
        if(i==s.size()) return 0;
        if(j==t.size()) return 0;
        if(dp[i][j]!=-1) return dp[i][j];
        int ans=0;
        if(s[i]==t[j]) ans=1+solve(s,t,i+1,j+1,dp);
        else{
            int a=solve(s,t,i+1,j,dp);
            int b=solve(s,t,i,j+1,dp);
            ans=max(a,b);
        }
        return dp[i][j]=ans;
    }
    int longestPalindromeSubseq(string s) {
        string str=s;
        reverse(str.begin(),str.end());
        int n=s.size();
        int m=str.size();
        vector<vector<int>>dp(n+1,vector<int>(m+1,-1));
        return solve(s,str,0,0,dp);
    }
};
