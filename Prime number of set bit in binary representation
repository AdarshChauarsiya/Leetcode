class Solution {
public:
    int bit(int n){
        // int i=1;
        // int bin=0;
        // while(n>0){
        //     int last=n%2;
        //     bin=bin+last*i;
        //     i=i*10;
        //     n=n/2;
        // }
        // return bin;
        int ans=0;
        while(n>0){
            if(n%2==1)ans++;
            n/=2;
        }
        return ans;
    }
    bool is_prime(int n){
        if(n==1) return false;
        for(int i=2;i<=sqrt(n);i++){
            if(n%i==0) return false;
        }
        return true;
    }
    int countPrimeSetBits(int left, int right) {
        int c=0;
        for(int i=left;i<=right;i++){
            int ans=bit(i);
            // string str=to_string(ans);
            // for(int i=0;i<str.size();i++){
            //     if(str[i]=='1') count++;
            // }
           if(is_prime(ans)==true) c++;
        }
        return c;
    }
};
