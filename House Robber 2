class Solution {
public:
    int solve(vector<int>&nums,int n,vector<int>&dp){
        if(n<0)return 0;
        if(n==0)return nums[0];
        if(dp[n]!=-1)return dp[n];
        return dp[n]=max((solve(nums,n-2,dp)+nums[n]),(solve(nums,n-1,dp)+0));
    }
    int rob(vector<int>& nums) {
        vector<int>f,s;
        int n=nums.size();
        if(n==1)return nums[0];
        for(int i=0;i<nums.size();i++){
            if(i!=0)s.push_back(nums[i]);
            if(i!=n-1)f.push_back(nums[i]);
        }
        vector<int>dp(f.size(),-1);
        vector<int>dp1(s.size(),-1);
        return max(solve(f,f.size()-1,dp),solve(s,s.size()-1,dp1));
    }
};
