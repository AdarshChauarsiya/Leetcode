class Solution {
public:
    vector<int> findLonely(vector<int>& nums) {
        vector<int>ans;
        /*int c=0;
        for(int i=0;i<nums.size();i++){
            for(int j=0;j<nums.size();j++){
                if(i!=j&&(nums[j]+1==nums[i] || nums[j]-1==nums[i] || nums[i]==nums[j])){
                    c++;
                }
            }
            if(c==0){
                ans.push_back(nums[i]);
            }
            c=0;
        }
    return ans;*/
    map<int,int>mp;
    for(int i=0;i<nums.size();i++){
        mp[nums[i]]++;
    }
    for(int i=0;i<nums.size();i++){
        if(mp[nums[i]]==1 && mp.find(nums[i]+1)==mp.end()&& mp.find(nums[i]-1)==mp.end()){
            ans.push_back(nums[i]);
        }
    }return ans;
    }
};
